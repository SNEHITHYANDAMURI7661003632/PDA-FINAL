# -*- coding: utf-8 -*-
"""LVADSUSR107_PDA _FINAL_REGRESSION.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/107R1aFSnECyL2Xep3C-7UfslCmzQ6MAV
"""

import pandas as pd
import numpy as np
df=pd.read_csv('/content/auto-mpg.csv')
df.head()

df.isnull().sum()

df['horsepower'] = pd.to_numeric(df['horsepower'], errors='coerce')
median_horsepower = df['horsepower'].median()
df['horsepower'].fillna(median_horsepower, inplace=True)
df['displacement'].fillna(df['displacement'].mean(),inplace=True)
df['acceleration'].fillna(df['acceleration'].mean(),inplace=True)

df.corr()
import seaborn as sns
sns.heatmap(df.corr(),annot=True)

df.duplicated().sum()
df.drop_duplicates()

sns.boxplot(df)

Q1 = df['mpg'].quantile(0.25)
Q3 = df['mpg'].quantile(0.75)
IQR = Q3 - Q1


lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

df_no_outliers = df[(df['mpg'] >= lower_bound) & (df['mpg'] <= upper_bound)]

print("Original DataFrame:")
print(df)
print("\nDataFrame after removing outliers:")
print(df_no_outliers)

from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt


x=df[['cylinders','displacement','horsepower','weight','acceleration']]
y=df['mpg']

from sklearn.model_selection import train_test_split
train_x,test_x,train_y,test_y=train_test_split(x,y,test_size=0.3,random_state=42)
model=LinearRegression()
model.fit(train_x,train_y)
pred=model.predict(test_x)

from sklearn.metrics import mean_squared_error, r2_score,accuracy_score
mse = mean_squared_error(test_y, pred)
print(mse)
rmse=np.sqrt(mse)
print(mse)
r2 = r2_score(test_y,pred)
print(r2)

import matplotlib.pyplot as plt

plt.figure(figsize=(8, 6))
plt.scatter(test_y, pred, color='blue')
plt.plot([test_y.min(), test_y.max()], [test_y.min(), test_y.max()], color='red', linestyle='--')
plt.xlabel('True Values')
plt.ylabel('Predicted Values')
plt.title('Scatter Plot of True vs Predicted Values')
plt.show()